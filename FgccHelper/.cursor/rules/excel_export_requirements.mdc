---
description: 
globs: 
alwaysApply: false
---
# FgccHelper Excel 导出功能需求文档

## 1. 核心目标

将当前已加载的活字格工程的统计信息（即 `Project` 对象及其包含的 `StatisticItem` 和 `DetailEntry` 列表）导出为一个Excel文件。

## 2. 用户操作流程

1.  **触发导出：** 用户通过点击主菜单 "文件" -> "导出为Excel(_E)" (新增的菜单项) 来启动导出过程。
2.  **文件保存对话框：** 系统弹出标准的文件保存对话框，允许用户：
    *   选择Excel文件的保存位置。
    *   输入Excel文件的名称 (例如，"MyProjectStatistics.xlsx")。
    *   文件类型筛选器应默认为 ".xlsx"。
3.  **获取路径：** 程序获取用户选择的完整文件路径（包括文件名）。
4.  **执行导出：** 调用核心的Excel导出函数，将当前的 `Project` 对象和用户指定的文件路径作为参数传入。
5.  **生成文件：** 导出函数根据 `Project` 对象的数据，在指定路径生成并保存Excel文件。
6.  **用户反馈：** 导出完成后，给用户一个提示，例如 "文件已成功导出到 [路径]" 或 "导出失败：[错误信息]"。

## 3. Excel文件结构与内容

### 3.1. 第三方库
*   使用 **ClosedXML** 库进行Excel文件的生成和操作。

### 3.2. Sheet 结构

*   **Sheet 1: "项目概况"**
    *   **固定名称：** "项目概况"
    *   **内容：**
        *   单元格 A1: "项目名称:" (加粗)
        *   单元格 B1: `Project.ProjectName`
        *   单元格 A2: "设计器版本:" (加粗)
        *   单元格 B2: `Project.DesignerVersion`
        *   从第4行开始，一个表格，列出所有统计项的概览：
            *   A4: "统计项名称" (表头，加粗)
            *   B4: "数量" (表头，加粗)
            *   C4: "描述" (表头，加粗)
            *   后续行为 `Project.Statistics` 列表中的每个 `StatisticItem`:
                *   列A: `StatisticItem.Name`
                *   列B: `StatisticItem.Count`
                *   列C: `StatisticItem.Description`

*   **后续 Sheets: 动态生成**
    *   **创建条件：** 仅当 `StatisticItem.Details` 列表不为空时，才为该 `StatisticItem` 创建对应的Sheet。
    *   **命名：** Sheet的名称直接使用 `StatisticItem.Name` (例如 "页面数量", "数据表数量" 等)。
    *   **内容：** 每个Sheet包含对应 `StatisticItem` 的 `Details` 列表 (`List<DetailEntry>`)。
        *   从第1行开始的表格：
            *   A1: "名称" (表头，加粗)
            *   B1: "大小" (表头，加粗)
            *   C1: "文件类型" (表头，加粗)
            *   后续行为 `Details` 列表中的每个 `DetailEntry`:
                *   列A: `DetailEntry.Name`
                *   列B: `DetailEntry.Size`
                *   列C: `DetailEntry.FileType`

## 4. 实现细节与注意事项

1.  **错误处理：**
    *   如果当前没有加载工程 (`_currentProject` 为 `null` 或其名称为 "未选择工程")，"导出为Excel(_E)" 菜单项应被禁用。
    *   处理文件保存对话框被用户取消的情况。
    *   捕获并处理Excel生成过程中的潜在异常（如磁盘空间不足、文件权限问题、ClosedXML库内部错误等），并向用户显示友好的错误信息。
2.  **异步操作：**
    *   Excel生成过程应在后台线程执行 (`Task.Run`)，以避免UI冻结。
    *   在后台任务执行期间，应显示加载动画/指示器 (`SetMainUILoadingState`)。
3.  **依赖管理：**
    *   通过NuGet包管理器将 ClosedXML 添加到 `FgccHelper.csproj` 项目中。
4.  **菜单项位置：**
    *   "导出为Excel(_E)" 菜单项位于 "文件" 主菜单下，"最近打开(_R)" 之后，第一个 `<Separator />` 之前。

## 5. （可选）样式增强
*   可以考虑为表头单元格设置背景色、字体加粗。
*   可以考虑根据内容自动调整列宽。 